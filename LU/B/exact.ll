; ModuleID = 'FIRModule'
source_filename = "FIRModule"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-linux-gnu"

%struct.ident_t = type { i32, i32, i32, i32, ptr }

@_QMlu_dataEa = external global [102 x [5 x [5 x double]]]
@_QMlu_dataEb = external global [102 x [5 x [5 x double]]]
@_QMlu_dataEc = external global [102 x [5 x [5 x double]]]
@_QMlu_dataEce = external local_unnamed_addr global [13 x [5 x double]]
@_QMlu_dataEd = external global [102 x [5 x [5 x double]]]
@_QMlu_dataEflux = external global [102 x [5 x double]]
@_QMlu_dataEnx0 = external local_unnamed_addr global i32
@_QMlu_dataEny0 = external local_unnamed_addr global i32
@_QMlu_dataEnz = external local_unnamed_addr global i32
@0 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@1 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 22, ptr @0 }, align 8
@_QMlu_dataEa.cache = common global ptr null, align 8
@_QMlu_dataEb.cache = common global ptr null, align 8
@_QMlu_dataEc.cache = common global ptr null, align 8
@_QMlu_dataEd.cache = common global ptr null, align 8
@_QMlu_dataEflux.cache = common global ptr null, align 8

; Function Attrs: nounwind
define void @exact_(ptr nocapture readonly %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture writeonly %3) local_unnamed_addr #0 {
  %omp_global_thread_num4 = tail call i32 @__kmpc_global_thread_num(ptr nonnull @1)
  %5 = tail call ptr @__kmpc_threadprivate_cached(ptr nonnull @1, i32 %omp_global_thread_num4, ptr nonnull @_QMlu_dataEa, i64 20400, ptr nonnull @_QMlu_dataEa.cache)
  %6 = tail call ptr @__kmpc_threadprivate_cached(ptr nonnull @1, i32 %omp_global_thread_num4, ptr nonnull @_QMlu_dataEb, i64 20400, ptr nonnull @_QMlu_dataEb.cache)
  %7 = tail call ptr @__kmpc_threadprivate_cached(ptr nonnull @1, i32 %omp_global_thread_num4, ptr nonnull @_QMlu_dataEc, i64 20400, ptr nonnull @_QMlu_dataEc.cache)
  %8 = tail call ptr @__kmpc_threadprivate_cached(ptr nonnull @1, i32 %omp_global_thread_num4, ptr nonnull @_QMlu_dataEd, i64 20400, ptr nonnull @_QMlu_dataEd.cache)
  %9 = tail call ptr @__kmpc_threadprivate_cached(ptr nonnull @1, i32 %omp_global_thread_num4, ptr nonnull @_QMlu_dataEflux, i64 4080, ptr nonnull @_QMlu_dataEflux.cache)
  %10 = load i32, ptr %0, align 4, !tbaa !4
  %11 = add i32 %10, -1
  %12 = sitofp i32 %11 to double
  %13 = load i32, ptr @_QMlu_dataEnx0, align 4, !tbaa !10
  %14 = add i32 %13, -1
  %15 = sitofp i32 %14 to double
  %16 = fdiv contract double %12, %15
  %17 = load i32, ptr %1, align 4, !tbaa !13
  %18 = add i32 %17, -1
  %19 = sitofp i32 %18 to double
  %20 = load i32, ptr @_QMlu_dataEny0, align 4, !tbaa !15
  %21 = add i32 %20, -1
  %22 = sitofp i32 %21 to double
  %23 = fdiv contract double %19, %22
  %24 = load i32, ptr %2, align 4, !tbaa !17
  %25 = add i32 %24, -1
  %26 = sitofp i32 %25 to double
  %27 = load i32, ptr @_QMlu_dataEnz, align 4, !tbaa !19
  %28 = add i32 %27, -1
  %29 = sitofp i32 %28 to double
  %30 = fdiv contract double %26, %29
  %31 = load double, ptr @_QMlu_dataEce, align 8, !tbaa !21
  %32 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 1, i64 0), align 8, !tbaa !21
  %33 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 4, i64 0), align 8, !tbaa !21
  %34 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 7, i64 0), align 8, !tbaa !21
  %35 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 10, i64 0), align 8, !tbaa !21
  %36 = fmul contract double %16, %35
  %37 = fadd contract double %34, %36
  %38 = fmul contract double %16, %37
  %39 = fadd contract double %33, %38
  %40 = fmul contract double %16, %39
  %41 = fadd contract double %32, %40
  %42 = fmul contract double %16, %41
  %43 = fadd contract double %31, %42
  %44 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 2, i64 0), align 8, !tbaa !21
  %45 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 5, i64 0), align 8, !tbaa !21
  %46 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 8, i64 0), align 8, !tbaa !21
  %47 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 11, i64 0), align 8, !tbaa !21
  %48 = fmul contract double %23, %47
  %49 = fadd contract double %46, %48
  %50 = fmul contract double %23, %49
  %51 = fadd contract double %45, %50
  %52 = fmul contract double %23, %51
  %53 = fadd contract double %44, %52
  %54 = fmul contract double %23, %53
  %55 = fadd contract double %43, %54
  %56 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 3, i64 0), align 8, !tbaa !21
  %57 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 6, i64 0), align 8, !tbaa !21
  %58 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 9, i64 0), align 8, !tbaa !21
  %59 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 12, i64 0), align 8, !tbaa !21
  %60 = fmul contract double %30, %59
  %61 = fadd contract double %58, %60
  %62 = fmul contract double %30, %61
  %63 = fadd contract double %57, %62
  %64 = fmul contract double %30, %63
  %65 = fadd contract double %56, %64
  %66 = fmul contract double %30, %65
  %67 = fadd contract double %55, %66
  store double %67, ptr %3, align 8, !tbaa !23
  %68 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 0, i64 1), align 8, !tbaa !21
  %69 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 1, i64 1), align 8, !tbaa !21
  %70 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 4, i64 1), align 8, !tbaa !21
  %71 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 7, i64 1), align 8, !tbaa !21
  %72 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 10, i64 1), align 8, !tbaa !21
  %73 = fmul contract double %16, %72
  %74 = fadd contract double %71, %73
  %75 = fmul contract double %16, %74
  %76 = fadd contract double %70, %75
  %77 = fmul contract double %16, %76
  %78 = fadd contract double %69, %77
  %79 = fmul contract double %16, %78
  %80 = fadd contract double %68, %79
  %81 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 2, i64 1), align 8, !tbaa !21
  %82 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 5, i64 1), align 8, !tbaa !21
  %83 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 8, i64 1), align 8, !tbaa !21
  %84 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 11, i64 1), align 8, !tbaa !21
  %85 = fmul contract double %23, %84
  %86 = fadd contract double %83, %85
  %87 = fmul contract double %23, %86
  %88 = fadd contract double %82, %87
  %89 = fmul contract double %23, %88
  %90 = fadd contract double %81, %89
  %91 = fmul contract double %23, %90
  %92 = fadd contract double %80, %91
  %93 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 3, i64 1), align 8, !tbaa !21
  %94 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 6, i64 1), align 8, !tbaa !21
  %95 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 9, i64 1), align 8, !tbaa !21
  %96 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 12, i64 1), align 8, !tbaa !21
  %97 = fmul contract double %30, %96
  %98 = fadd contract double %95, %97
  %99 = fmul contract double %30, %98
  %100 = fadd contract double %94, %99
  %101 = fmul contract double %30, %100
  %102 = fadd contract double %93, %101
  %103 = fmul contract double %30, %102
  %104 = fadd contract double %92, %103
  %105 = getelementptr i8, ptr %3, i64 8
  store double %104, ptr %105, align 8, !tbaa !23
  %106 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 0, i64 2), align 8, !tbaa !21
  %107 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 1, i64 2), align 8, !tbaa !21
  %108 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 4, i64 2), align 8, !tbaa !21
  %109 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 7, i64 2), align 8, !tbaa !21
  %110 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 10, i64 2), align 8, !tbaa !21
  %111 = fmul contract double %16, %110
  %112 = fadd contract double %109, %111
  %113 = fmul contract double %16, %112
  %114 = fadd contract double %108, %113
  %115 = fmul contract double %16, %114
  %116 = fadd contract double %107, %115
  %117 = fmul contract double %16, %116
  %118 = fadd contract double %106, %117
  %119 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 2, i64 2), align 8, !tbaa !21
  %120 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 5, i64 2), align 8, !tbaa !21
  %121 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 8, i64 2), align 8, !tbaa !21
  %122 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 11, i64 2), align 8, !tbaa !21
  %123 = fmul contract double %23, %122
  %124 = fadd contract double %121, %123
  %125 = fmul contract double %23, %124
  %126 = fadd contract double %120, %125
  %127 = fmul contract double %23, %126
  %128 = fadd contract double %119, %127
  %129 = fmul contract double %23, %128
  %130 = fadd contract double %118, %129
  %131 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 3, i64 2), align 8, !tbaa !21
  %132 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 6, i64 2), align 8, !tbaa !21
  %133 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 9, i64 2), align 8, !tbaa !21
  %134 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 12, i64 2), align 8, !tbaa !21
  %135 = fmul contract double %30, %134
  %136 = fadd contract double %133, %135
  %137 = fmul contract double %30, %136
  %138 = fadd contract double %132, %137
  %139 = fmul contract double %30, %138
  %140 = fadd contract double %131, %139
  %141 = fmul contract double %30, %140
  %142 = fadd contract double %130, %141
  %143 = getelementptr i8, ptr %3, i64 16
  store double %142, ptr %143, align 8, !tbaa !23
  %144 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 0, i64 3), align 8, !tbaa !21
  %145 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 1, i64 3), align 8, !tbaa !21
  %146 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 4, i64 3), align 8, !tbaa !21
  %147 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 7, i64 3), align 8, !tbaa !21
  %148 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 10, i64 3), align 8, !tbaa !21
  %149 = fmul contract double %16, %148
  %150 = fadd contract double %147, %149
  %151 = fmul contract double %16, %150
  %152 = fadd contract double %146, %151
  %153 = fmul contract double %16, %152
  %154 = fadd contract double %145, %153
  %155 = fmul contract double %16, %154
  %156 = fadd contract double %144, %155
  %157 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 2, i64 3), align 8, !tbaa !21
  %158 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 5, i64 3), align 8, !tbaa !21
  %159 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 8, i64 3), align 8, !tbaa !21
  %160 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 11, i64 3), align 8, !tbaa !21
  %161 = fmul contract double %23, %160
  %162 = fadd contract double %159, %161
  %163 = fmul contract double %23, %162
  %164 = fadd contract double %158, %163
  %165 = fmul contract double %23, %164
  %166 = fadd contract double %157, %165
  %167 = fmul contract double %23, %166
  %168 = fadd contract double %156, %167
  %169 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 3, i64 3), align 8, !tbaa !21
  %170 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 6, i64 3), align 8, !tbaa !21
  %171 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 9, i64 3), align 8, !tbaa !21
  %172 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 12, i64 3), align 8, !tbaa !21
  %173 = fmul contract double %30, %172
  %174 = fadd contract double %171, %173
  %175 = fmul contract double %30, %174
  %176 = fadd contract double %170, %175
  %177 = fmul contract double %30, %176
  %178 = fadd contract double %169, %177
  %179 = fmul contract double %30, %178
  %180 = fadd contract double %168, %179
  %181 = getelementptr i8, ptr %3, i64 24
  store double %180, ptr %181, align 8, !tbaa !23
  %182 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 0, i64 4), align 8, !tbaa !21
  %183 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 1, i64 4), align 8, !tbaa !21
  %184 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 4, i64 4), align 8, !tbaa !21
  %185 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 7, i64 4), align 8, !tbaa !21
  %186 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 10, i64 4), align 8, !tbaa !21
  %187 = fmul contract double %16, %186
  %188 = fadd contract double %185, %187
  %189 = fmul contract double %16, %188
  %190 = fadd contract double %184, %189
  %191 = fmul contract double %16, %190
  %192 = fadd contract double %183, %191
  %193 = fmul contract double %16, %192
  %194 = fadd contract double %182, %193
  %195 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 2, i64 4), align 8, !tbaa !21
  %196 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 5, i64 4), align 8, !tbaa !21
  %197 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 8, i64 4), align 8, !tbaa !21
  %198 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 11, i64 4), align 8, !tbaa !21
  %199 = fmul contract double %23, %198
  %200 = fadd contract double %197, %199
  %201 = fmul contract double %23, %200
  %202 = fadd contract double %196, %201
  %203 = fmul contract double %23, %202
  %204 = fadd contract double %195, %203
  %205 = fmul contract double %23, %204
  %206 = fadd contract double %194, %205
  %207 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 3, i64 4), align 8, !tbaa !21
  %208 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 6, i64 4), align 8, !tbaa !21
  %209 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 9, i64 4), align 8, !tbaa !21
  %210 = load double, ptr getelementptr inbounds ([13 x [5 x double]], ptr @_QMlu_dataEce, i64 0, i64 12, i64 4), align 8, !tbaa !21
  %211 = fmul contract double %30, %210
  %212 = fadd contract double %209, %211
  %213 = fmul contract double %30, %212
  %214 = fadd contract double %208, %213
  %215 = fmul contract double %30, %214
  %216 = fadd contract double %207, %215
  %217 = fmul contract double %30, %216
  %218 = fadd contract double %206, %217
  %219 = getelementptr i8, ptr %3, i64 32
  store double %218, ptr %219, align 8, !tbaa !23
  ret void
}

; Function Attrs: nounwind
declare i32 @__kmpc_global_thread_num(ptr) local_unnamed_addr #1

; Function Attrs: nounwind
declare ptr @__kmpc_threadprivate_cached(ptr, i32, ptr, i64, ptr) local_unnamed_addr #1

attributes #0 = { nounwind "frame-pointer"="non-leaf" "target-cpu"="generic" "target-features"="+outline-atomics,+v8a,+fp-armv8,+neon" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 7, !"openmp", i32 11}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{!5, !5, i64 0}
!5 = !{!"dummy arg data/_QFexactEi", !6, i64 0}
!6 = !{!"dummy arg data", !7, i64 0}
!7 = !{!"any data access", !8, i64 0}
!8 = !{!"any access", !9, i64 0}
!9 = !{!"Flang function root _QPexact"}
!10 = !{!11, !11, i64 0}
!11 = !{!"global data/_QMlu_dataEnx0", !12, i64 0}
!12 = !{!"global data", !7, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"dummy arg data/_QFexactEj", !6, i64 0}
!15 = !{!16, !16, i64 0}
!16 = !{!"global data/_QMlu_dataEny0", !12, i64 0}
!17 = !{!18, !18, i64 0}
!18 = !{!"dummy arg data/_QFexactEk", !6, i64 0}
!19 = !{!20, !20, i64 0}
!20 = !{!"global data/_QMlu_dataEnz", !12, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"global data/_QMlu_dataEce", !12, i64 0}
!23 = !{!24, !24, i64 0}
!24 = !{!"dummy arg data/_QFexactEu000ijk", !6, i64 0}
